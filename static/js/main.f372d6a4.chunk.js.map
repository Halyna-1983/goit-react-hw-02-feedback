{"version":3,"sources":["components/Statistics/Stat.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Section/Section.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positive","className","FeedbackOptions","options","onLeaveFeedback","map","option","type","name","onClick","shortid","generate","Notification","message","Section","title","children","App","state","value","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Stat","Component","ReactDOM","render","document","getElementById"],"mappings":"+PA6BmBA,EAxBA,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,IAAKC,EAAtB,EAAsBA,MAAOC,EAA7B,EAA6BA,SAA7B,OAEV,sBAAKC,UAAU,oBAAf,UAED,+BACI,wCAAWL,EAAX,OACA,2CAAcC,EAAd,OACA,wCAAWC,EAAX,UAIJ,0CAAaC,EAAb,OACA,sDAAyBC,EAAzB,a,gBCUOE,EAtBS,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASC,EAAX,EAAWA,gBAAX,OAEpB,8BACCD,EAAQE,KAAI,SAACC,GAAD,OACT,wBAEIC,KAAK,SACLC,KAAMF,EACNG,QAAS,kBAAKL,EAAgBE,IAJlC,SAMKA,GALII,IAAQC,kBCCVC,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACpB,4BAAIA,KCsBUC,G,MAtBC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACf,sBAAKf,UAAU,UAAf,UACC,6BAAMc,IACLC,OC0EYC,E,4MArEfC,MAAQ,CACAtB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTM,gBAAkB,SAACe,GAEf,EAAKC,UAAS,SAAAC,GAAS,sBAAOF,EAAQE,EAAUF,GAAS,O,EAqB7DG,mBAAqB,WAEjB,OADc,EAAKJ,MAAMtB,KAAO,EAAKsB,MAAMrB,QAAU,EAAKqB,MAAMpB,K,EAIpEyB,gCAAkC,WAE9B,OADgCC,KAAKC,MAAM,IAAI,EAAKH,qBAAqB,EAAKJ,MAAMtB,O,4CAIxF,WACI,MAA6B8B,KAAKR,MAA3BtB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,QAASC,EAAtB,EAAsBA,IAChBC,EAAQ2B,KAAKJ,qBACbtB,EAAW0B,KAAKH,kCAG9B,OACA,gCACI,cAAC,EAAD,CAASR,MAAM,2BAAf,SACI,cAAC,EAAD,CACQZ,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBsB,KAAKtB,oBAInC,cAAC,EAAD,CAASW,MAAM,aAAf,SACChB,EAAQ,EACJ,cAAC4B,EAAD,CACI/B,KAAQA,EACRC,QAAWA,EACXC,IAAOA,EACPC,MAASA,EACTC,SAAYA,IAChB,cAAC,EAAD,CAAca,QAAW,gC,GAhEfe,aCJlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f372d6a4.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Statistics.css';\r\n\r\n\r\nconst Statistics = ({good, neutral, bad, total, positive}) => (\r\n    \r\n         <div className=\"Statistics__title\">\r\n    \r\n        <ul>\r\n            <li>Good: {good} </li>\r\n            <li>Neutral: {neutral} </li>\r\n            <li> Bad: {bad} </li>\r\n\r\n        </ul>\r\n\r\n        <h3> Total: {total} </h3>\r\n        <h3> Positive feedback: {positive} % </h3>\r\n        \r\n    </div>\r\n); \r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positive: PropTypes.number.isRequired,\r\n};\r\n    export default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from \"shortid\";\r\n\r\n\r\nconst FeedbackOptions = ({options, onLeaveFeedback}) => (\r\n\r\n    <div>\r\n    {options.map((option) => (\r\n        <button\r\n            key={shortid.generate()}\r\n            type=\"button\"\r\n            name={option}\r\n            onClick={()=> onLeaveFeedback(option)}\r\n        >\r\n            {option}\r\n        </button>\r\n    ))}\r\n    \r\n</div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.array.isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n  };\r\n\r\nexport default FeedbackOptions; ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => (\r\n\t<p>{message}</p>\r\n)\r\n\r\nNotification.propTypes = {\r\n\tmessage: PropTypes.string.isRequired,\r\n}\r\n \r\nexport default Notification;","import React from 'react'; \r\nimport PropTypes from 'prop-types';\r\nimport './Section.css'\r\n\r\nconst Section = ({ title, children }) => (\r\n\t<div className='Section'>\r\n\t\t<h2>{ title }</h2>\r\n\t\t{children}\r\n\t</div>\r\n);\r\n\r\n// render() {\r\n// \tconst {title, children} = this.props;\r\n\r\n// \treturn (\r\n// \t\t<Section>\r\n// <h1>{title}</h1>\r\n// ()\r\n// \t\t</Section>\r\n// \t)\r\n// }\r\n \r\nSection.propTypes = {\r\n\ttitle: PropTypes.string.isRequired,\r\n\tchildren: PropTypes.node,\r\n}\r\nexport default Section;","import React, {Component} from 'react';\r\n\r\n// компоненти\r\n\r\n//import Statistics from './components/Statistics';\r\nimport Statistics from './components/Statistics/Stat';\r\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\r\nimport Notification from './components/Notification/Notification';\r\nimport Section from './components/Section/Section';\r\n\r\nclass App extends Component {\r\n\r\nstate = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0,\r\n    };\r\n\r\n    onLeaveFeedback = (value) => {\r\n        //const value = e.target.value;\r\n        this.setState(prevState => ({[value]: prevState[value] + 1}));\r\n    };\r\n\r\n    // handleGood = () => {\r\n    //     this.setState(prevState => ({\r\n    //             valueGood: prevState.valueGood + 1,\r\n    //     }))\r\n    // };\r\n\r\n    // handleNeutral = () => {\r\n    //     this.setState(prevState => ({\r\n    //             valueNeutral: prevState.valueNeutral + 1,\r\n    //     }))\r\n    // };\r\n\r\n    // handleBad = () => {\r\n    //     this.setState(prevState => ({\r\n    //             valueBad: prevState.valueBad + 1,\r\n    //     }))\r\n    // };\r\n\r\n    countTotalFeedback = () => {\r\n        const total = this.state.good + this.state.neutral + this.state.bad;\r\n        return total;   \r\n    };\r\n\r\n    countPositiveFeedbackPercentage = () => {\r\n        const positiveFeedbackPercent = Math.round(100/this.countTotalFeedback()*this.state.good);\r\n        return positiveFeedbackPercent;\r\n    }\r\n\r\n    render () {\r\n        const {good, neutral, bad} = this.state;\r\n        const total = this.countTotalFeedback();\r\n        const positive = this.countPositiveFeedbackPercentage();\r\n        //const objKey = Object.keys(this.state);\r\n\r\nreturn (\r\n<div>\r\n    <Section title=\"Please leave us feedback\">\r\n        <FeedbackOptions \r\n                options={['good', 'neutral', 'bad']}\r\n                onLeaveFeedback={this.onLeaveFeedback} \r\n                />\r\n                </Section>\r\n\r\n   <Section title=\"Statistics\">\r\n   {total > 0 ? \r\n        <Statistics\r\n            good = {good}\r\n            neutral = {neutral}\r\n            bad = {bad}\r\n            total = {total}\r\n            positive = {positive} /> : \r\n        <Notification message = {'No feedback  given'} />}      \r\n </Section>\r\n </div>      \r\n)\r\n}\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\n// import 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}