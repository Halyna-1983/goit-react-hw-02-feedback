{"version":3,"sources":["components/Statistics.js","App.js","index.js"],"names":["Statistics","state","valueGood","valueNeutral","valueBad","handleGood","setState","prevState","handleNeutral","handleBad","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","totalFeedback","this","positiveFeedbackPercentage","className","type","onClick","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"2OA+GeA,E,4MAhFXC,MAAQ,CACJC,UAAW,EACXC,aAAc,EACdC,SAAU,G,EAGdC,WAAa,WACT,EAAKC,UAAS,SAAAC,GAAS,MAAK,CACpBL,UAAWK,EAAUL,UAAY,O,EAI7CM,cAAgB,WACZ,EAAKF,UAAS,SAAAC,GAAS,MAAK,CACpBJ,aAAcI,EAAUJ,aAAe,O,EAInDM,UAAY,WACR,EAAKH,UAAS,SAAAC,GAAS,MAAK,CACpBH,SAAUG,EAAUH,SAAW,O,EAI3CM,mBAAqB,WAEjB,OADc,EAAKT,MAAMC,UAAY,EAAKD,MAAME,aAAe,EAAKF,MAAMG,U,EAI9EO,gCAAkC,WAE9B,OADgCC,KAAKC,MAAM,IAAI,EAAKH,qBAAqB,EAAKT,MAAMC,Y,4CAIxF,WACI,IAAMY,EAAgBC,KAAKL,qBACrBM,EAA6BD,KAAKJ,kCAGxC,OAEJ,sBAAKM,UAAU,YAAf,UACI,2DACA,sBAAKA,UAAU,kBAAf,UACI,wBAAQA,UAAU,gBAAgBC,KAAK,SAASC,QAASJ,KAAKV,WAA9D,kBACA,wBAAQY,UAAU,eAAeC,KAAK,SAASC,QAASJ,KAAKP,cAA7D,qBACA,wBAAQS,UAAU,WAAWC,KAAK,SAASC,QAASJ,KAAKN,UAAzD,oBAWJ,8BACI,oBAAIQ,UAAU,oBAAd,0BAEJ,8BACI,+BACI,uCAAUF,KAAKd,MAAMC,aAEpB,0CAAaa,KAAKd,MAAME,aAAxB,OAEA,sCAASY,KAAKd,MAAMG,YAEpB,wCAAWU,KAEX,oDAAuBE,EAAvB,mB,GAvEQI,IAAMC,WCHhBC,EAjBH,kBAEJ,cAAC,EAAD,KCNRC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.96d3ac0f.chunk.js","sourcesContent":["// Приложение должно отображать количество собранных отзывов для каждой категории. Приложение не должно сохранять статистику отзывов между разными сессиями (обновление страницы).\r\n\r\n// Состояние приложения обязательно должно быть следующего вида, добавлять новые свойства нельзя.\r\n\r\n// state = {\r\n//   good: 0,\r\n//   neutral: 0,\r\n//   bad: 0\r\n// }\r\n\r\n// Шаг 2\r\n// Расширь функционал приложения так, чтобы в интерфейсе отображалось больше статистики о собранных отзывах.\r\n// Добавь отображение общего количества собранных отзывов из всех категорий и процент положительных отзывов. \r\n// Для этого создай вспомогательные методы countTotalFeedback() и countPositiveFeedbackPercentage(), \r\n// подсчитывающие эти значения основываясь на данных в состоянии (вычисляемые данные).\r\n\r\n// Шаг 3\r\n// Выполни рефакторинг приложения. Состояние приложения должно оставаться в корневом компоненте <App>.\r\n\r\n// Вынеси отображение статистики в отдельный компонент <Statistics good={} neutral={} bad={} total={} \r\n// positivePercentage={}>.\r\n// Вынеси блок кнопок в компонент <FeedbackOptions options={} onLeaveFeedback={}>.\r\n// Создай компонент <Section title=\"\">, который рендерит секцию с заголовком и детей (children). \r\n// Оберни каждый из <Statistics> и <FeedbackOptions> в созданный компонент секции.\r\n\r\n\r\nimport React from 'react';\r\n//import './Statistics/Stat';\r\nimport './Statistics/Statistics.css';\r\n\r\nclass Statistics extends React.Component {\r\n    state = {\r\n        valueGood: 0,\r\n        valueNeutral: 0,\r\n        valueBad: 0,\r\n    };\r\n\r\n    handleGood = () => {\r\n        this.setState(prevState => ({\r\n                valueGood: prevState.valueGood + 1,\r\n        }))\r\n    };\r\n\r\n    handleNeutral = () => {\r\n        this.setState(prevState => ({\r\n                valueNeutral: prevState.valueNeutral + 1,\r\n        }))\r\n    };\r\n\r\n    handleBad = () => {\r\n        this.setState(prevState => ({\r\n                valueBad: prevState.valueBad + 1,\r\n        }))\r\n    };\r\n\r\n    countTotalFeedback = () => {\r\n        const total = this.state.valueGood + this.state.valueNeutral + this.state.valueBad;\r\n        return total;   \r\n    };\r\n\r\n    countPositiveFeedbackPercentage = () => {\r\n        const positiveFeedbackPercent = Math.round(100/this.countTotalFeedback()*this.state.valueGood);\r\n        return positiveFeedbackPercent;\r\n    }\r\n\r\n    render () {\r\n        const totalFeedback = this.countTotalFeedback();\r\n        const positiveFeedbackPercentage = this.countPositiveFeedbackPercentage();\r\n\r\n\r\n        return (\r\n\r\n    <div className=\"Container\">\r\n        <h1> Please leave us feedback</h1>\r\n        <div className=\"Statistics__btn\">\r\n            <button className=\"positive__btn\" type=\"button\" onClick={this.handleGood}>Good</button>\r\n            <button className=\"neutral__btn\" type=\"button\" onClick={this.handleNeutral}>Neutral</button>\r\n            <button className=\"bad__btn\" type=\"button\" onClick={this.handleBad}>Bad</button>\r\n        </div>\r\n\r\n     {/* <Stat \r\n     onGood = {this.state.valueGood}\r\n     onNeutral = {this.state.valueNeutral}\r\n     onBad = {this.state.valueBad}\r\n     onTotalFeedback = {totalFeedback}\r\n     onPositivePercentage = {positiveFeedbackPercentage}\r\n     /> */}\r\n\r\n        <div>\r\n            <h3 className=\"Statistics__title\">Statistics</h3>\r\n        </div>\r\n        <div>\r\n            <ul>\r\n                <li>Good:{this.state.valueGood}</li>\r\n                 \r\n                 <li>Neutral:{this.state.valueNeutral} </li>\r\n\r\n                 <li>Bad:{this.state.valueBad}</li>\r\n\r\n                 <li>Total:{totalFeedback}</li>\r\n\r\n                 <li>Positive feedback:{positiveFeedbackPercentage}%</li>\r\n\r\n            </ul>\r\n        </div>\r\n     \r\n    </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Statistics;","import React from 'react';\r\n\r\n\r\n// компоненти\r\n\r\nimport Statistics from './components/Statistics';\r\n//import Statistic from './components/Statistics/Stat';\r\n//import FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\r\n\r\n\r\nconst App = () => (\r\n\r\n        <Statistics \r\n                // onGood = {Statistics.handleGood}\r\n                // onNeutral = {Statistics.valueNeutral}\r\n                // onBad = {Statistics.valueBad}\r\n                // onTotalFeedback = {Statistics.totalFeedback}\r\n                // onPositivePercentage = {Statistics.positiveFeedbackPercentage} \r\n                />\r\n\r\n        //  <FeedbackOptions \r\n        //  handleGood = {Statistics.handleGood}\r\n        //  handleNeutral = {Statistics.valueNeutral}\r\n        //  handleBad = {Statistics.valueBad} />\r\n\r\n)\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\n// import 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}